##
## Include OS specific vars
##
- name: Include OS specific vars
  include_vars: "{{ ansible_os_family | lower }}.yml"

##
## Ask for a certification ticket at the Icinga Master and save the ticket string as "ticket"
##
- name: Generate ticket on the icinga master and save it as a variable
  shell: /usr/sbin/icinga2 pki ticket --cn {{ i2_agent_fqdn }}
  register: ticket
  delegate_to: "{{ i2_master_fqdn }}"
  delegate_facts: True
- set_fact:
    ticket: "{{ ticket.stdout }}"
  
##
## Install and configure the Icinga Agent on the joining host / container
##
- name: Install Icinga2 repository and package
  include: "install-icinga2-package.yml"
- name: "Connect new agent to Icinga master"
  include: "connect-new-agent.yml"

##
## Back to the master: Add the new agent and its zone
##
- name: Append new agent to zones.conf
  blockinfile:
    destfile: /etc/icinga2/zones.conf
    marker: "// {mark} ANSIBLE MANAGED BLOCK {{ i2_agent_fqdn }}"
    block: |
      object Endpoint "{{ i2_agent_fqdn }}" {}
      object Zone "{{ i2_agent_fqdn }}" {
        endpoints = [ "{{ i2_agent_fqdn }}" ]
        parent = "master"
      }
  delegate_to: "{{ i2_master_fqdn }}"
  delegate_facts: True

- name: Create zones.d {{ i2_agent_fqdn }} directory
  file:
    path: /etc/icinga2/zones.d/{{ i2_agent_fqdn }}
    state: directory
    mode: 0755
    owner: "nagios"
    group: "nagios"
  delegate_to: "{{ i2_master_fqdn }}"
  delegate_facts: True

- name: Create host.conf for new agent
  template:
    src: master-host.conf.j2
    dest: /etc/icinga2/zones.d/{{ i2_agent_fqdn }}/host.conf
    force: no
  delegate_to: "{{ i2_master_fqdn }}"
  delegate_facts: True

- name: reload icinga2 master instance
  service:
    name: icinga2
    state: reloaded
  delegate_to: "{{ i2_master_fqdn }}"
  delegate_facts: True